
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Servicios", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Servicios {


    /**
     * 
     * @param carr
     * @param nac
     * @param pApe
     * @param ident
     * @param sApe
     * @param id
     * @param cel
     * @param nom
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "actualizarEstudiante", targetNamespace = "http://WebService/", className = "webservice.ActualizarEstudiante")
    @ResponseWrapper(localName = "actualizarEstudianteResponse", targetNamespace = "http://WebService/", className = "webservice.ActualizarEstudianteResponse")
    @Action(input = "http://WebService/Servicios/actualizarEstudianteRequest", output = "http://WebService/Servicios/actualizarEstudianteResponse")
    public String actualizarEstudiante(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "ident", targetNamespace = "")
        String ident,
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "pApe", targetNamespace = "")
        String pApe,
        @WebParam(name = "sApe", targetNamespace = "")
        String sApe,
        @WebParam(name = "nac", targetNamespace = "")
        String nac,
        @WebParam(name = "cel", targetNamespace = "")
        String cel,
        @WebParam(name = "carr", targetNamespace = "")
        String carr);

    /**
     * 
     * @param cred
     * @param tipo
     * @param matri
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "agregarAsignatura", targetNamespace = "http://WebService/", className = "webservice.AgregarAsignatura")
    @ResponseWrapper(localName = "agregarAsignaturaResponse", targetNamespace = "http://WebService/", className = "webservice.AgregarAsignaturaResponse")
    @Action(input = "http://WebService/Servicios/agregarAsignaturaRequest", output = "http://WebService/Servicios/agregarAsignaturaResponse")
    public String agregarAsignatura(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo,
        @WebParam(name = "cred", targetNamespace = "")
        int cred,
        @WebParam(name = "matri", targetNamespace = "")
        int matri);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminarAsignatura", targetNamespace = "http://WebService/", className = "webservice.EliminarAsignatura")
    @ResponseWrapper(localName = "eliminarAsignaturaResponse", targetNamespace = "http://WebService/", className = "webservice.EliminarAsignaturaResponse")
    @Action(input = "http://WebService/Servicios/eliminarAsignaturaRequest", output = "http://WebService/Servicios/eliminarAsignaturaResponse")
    public String eliminarAsignatura(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.Asignatura>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarAsignaturas", targetNamespace = "http://WebService/", className = "webservice.ListarAsignaturas")
    @ResponseWrapper(localName = "listarAsignaturasResponse", targetNamespace = "http://WebService/", className = "webservice.ListarAsignaturasResponse")
    @Action(input = "http://WebService/Servicios/listarAsignaturasRequest", output = "http://WebService/Servicios/listarAsignaturasResponse")
    public List<Asignatura> listarAsignaturas();

    /**
     * 
     * @param carr
     * @param nac
     * @param pApe
     * @param ident
     * @param sApe
     * @param cel
     * @param nom
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "agregarEstudiante", targetNamespace = "http://WebService/", className = "webservice.AgregarEstudiante")
    @ResponseWrapper(localName = "agregarEstudianteResponse", targetNamespace = "http://WebService/", className = "webservice.AgregarEstudianteResponse")
    @Action(input = "http://WebService/Servicios/agregarEstudianteRequest", output = "http://WebService/Servicios/agregarEstudianteResponse")
    public String agregarEstudiante(
        @WebParam(name = "ident", targetNamespace = "")
        String ident,
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "pApe", targetNamespace = "")
        String pApe,
        @WebParam(name = "sApe", targetNamespace = "")
        String sApe,
        @WebParam(name = "nac", targetNamespace = "")
        String nac,
        @WebParam(name = "cel", targetNamespace = "")
        String cel,
        @WebParam(name = "carr", targetNamespace = "")
        String carr);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.Estudiante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarEstudiantes", targetNamespace = "http://WebService/", className = "webservice.ListarEstudiantes")
    @ResponseWrapper(localName = "listarEstudiantesResponse", targetNamespace = "http://WebService/", className = "webservice.ListarEstudiantesResponse")
    @Action(input = "http://WebService/Servicios/listarEstudiantesRequest", output = "http://WebService/Servicios/listarEstudiantesResponse")
    public List<Estudiante> listarEstudiantes();

    /**
     * 
     * @param cred
     * @param tipo
     * @param matri
     * @param id
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "actualizarAsignatura", targetNamespace = "http://WebService/", className = "webservice.ActualizarAsignatura")
    @ResponseWrapper(localName = "actualizarAsignaturaResponse", targetNamespace = "http://WebService/", className = "webservice.ActualizarAsignaturaResponse")
    @Action(input = "http://WebService/Servicios/actualizarAsignaturaRequest", output = "http://WebService/Servicios/actualizarAsignaturaResponse")
    public String actualizarAsignatura(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo,
        @WebParam(name = "cred", targetNamespace = "")
        int cred,
        @WebParam(name = "matri", targetNamespace = "")
        int matri);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminarEstudiante", targetNamespace = "http://WebService/", className = "webservice.EliminarEstudiante")
    @ResponseWrapper(localName = "eliminarEstudianteResponse", targetNamespace = "http://WebService/", className = "webservice.EliminarEstudianteResponse")
    @Action(input = "http://WebService/Servicios/eliminarEstudianteRequest", output = "http://WebService/Servicios/eliminarEstudianteResponse")
    public String eliminarEstudiante(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param acc
     * @param idAsg
     * @param idEst
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cambioAsignaturas", targetNamespace = "http://WebService/", className = "webservice.CambioAsignaturas")
    @ResponseWrapper(localName = "cambioAsignaturasResponse", targetNamespace = "http://WebService/", className = "webservice.CambioAsignaturasResponse")
    @Action(input = "http://WebService/Servicios/cambioAsignaturasRequest", output = "http://WebService/Servicios/cambioAsignaturasResponse")
    public String cambioAsignaturas(
        @WebParam(name = "idEst", targetNamespace = "")
        int idEst,
        @WebParam(name = "idAsg", targetNamespace = "")
        int idAsg,
        @WebParam(name = "acc", targetNamespace = "")
        int acc);

    /**
     * 
     * @param idEst
     * @return
     *     returns java.util.List<webservice.Asignatura>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verAsignaturas", targetNamespace = "http://WebService/", className = "webservice.VerAsignaturas")
    @ResponseWrapper(localName = "verAsignaturasResponse", targetNamespace = "http://WebService/", className = "webservice.VerAsignaturasResponse")
    @Action(input = "http://WebService/Servicios/verAsignaturasRequest", output = "http://WebService/Servicios/verAsignaturasResponse")
    public List<Asignatura> verAsignaturas(
        @WebParam(name = "idEst", targetNamespace = "")
        int idEst);

    /**
     * 
     * @param idAsg
     * @return
     *     returns java.util.List<webservice.Estudiante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verEstudiantes", targetNamespace = "http://WebService/", className = "webservice.VerEstudiantes")
    @ResponseWrapper(localName = "verEstudiantesResponse", targetNamespace = "http://WebService/", className = "webservice.VerEstudiantesResponse")
    @Action(input = "http://WebService/Servicios/verEstudiantesRequest", output = "http://WebService/Servicios/verEstudiantesResponse")
    public List<Estudiante> verEstudiantes(
        @WebParam(name = "idAsg", targetNamespace = "")
        int idAsg);

    /**
     * 
     * @param pApe
     * @param ident
     * @param id
     * @return
     *     returns webservice.Estudiante
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarEstudiante", targetNamespace = "http://WebService/", className = "webservice.BuscarEstudiante")
    @ResponseWrapper(localName = "buscarEstudianteResponse", targetNamespace = "http://WebService/", className = "webservice.BuscarEstudianteResponse")
    @Action(input = "http://WebService/Servicios/buscarEstudianteRequest", output = "http://WebService/Servicios/buscarEstudianteResponse")
    public Estudiante buscarEstudiante(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "ident", targetNamespace = "")
        int ident,
        @WebParam(name = "p_ape", targetNamespace = "")
        String pApe);

    /**
     * 
     * @param id
     * @return
     *     returns webservice.Asignatura
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarAsignatura", targetNamespace = "http://WebService/", className = "webservice.BuscarAsignatura")
    @ResponseWrapper(localName = "buscarAsignaturaResponse", targetNamespace = "http://WebService/", className = "webservice.BuscarAsignaturaResponse")
    @Action(input = "http://WebService/Servicios/buscarAsignaturaRequest", output = "http://WebService/Servicios/buscarAsignaturaResponse")
    public Asignatura buscarAsignatura(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
